; Declaration of options for compiling functions.
; This should be associated with code to do the compilation and with examples of each choice.
; The system should be able to compile and execute a sample function for each choice, and measure the
; memory size and execution speed produced. These results should factor into the prototype selection process.

(defproto int:+ (int:a int:b))
(defproto double:+ (double:a int:b))
(defproto double:+ (int:a double:b))
(defproto double:+ (double:a double:b))
(defproto int:+ (int:a Object:b))
(defproto double:+ (int:a Object:b))
(defproto double:+ (double:a Object:b))
(defproto int:+ (Object:a int:b))
(defproto double:+ (Object:a int:b))
(defproto double:+ (Object:a double:b))
(defproto int:+ (Object:a Object:b))
(defproto double:+ (Object:a Object:b))

(defproto int:- (int:a int:b))
(defproto double:- (double:a int:b))
(defproto double:- (int:a double:b))
(defproto double:- (double:a double:b))
(defproto int:- (int:a Object:b))
(defproto double:- (int:a Object:b))
(defproto double:- (double:a Object:b))
(defproto int:- (Object:a int:b))
(defproto double:- (Object:a int:b))
(defproto double:- (Object:a double:b))
(defproto int:- (Object:a Object:b))
(defproto double:- (Object:a Object:b))

(defproto int:* (int:a int:b))
(defproto double:* (double:a int:b))
(defproto double:* (int:a double:b))
(defproto double:* (double:a double:b))
(defproto int:* (int:a Object:b))
(defproto double:* (int:a Object:b))
(defproto double:* (double:a Object:b))
(defproto int:* (Object:a int:b))
(defproto double:* (Object:a int:b))
(defproto double:* (Object:a double:b))
(defproto int:* (Object:a Object:b))
(defproto double:* (Object:a Object:b))

(defproto int:/ (int:a int:b))
(defproto double:/ (double:a int:b))
(defproto double:/ (int:a double:b))
(defproto double:/ (double:a double:b))
(defproto int:/ (int:a Object:b))
(defproto double:/ (int:a Object:b))
(defproto double:/ (double:a Object:b))
(defproto int:/ (Object:a int:b))
(defproto double:/ (Object:a int:b))
(defproto double:/ (Object:a double:b))
(defproto int:/ (Object:a Object:b))
(defproto double:/ (Object:a Object:b))

(defproto int:1+ (int:a))
(defproto double:1+ (double:a))
(defproto int:1+ (Object:a))
(defproto double:1+ (Object:a))

(defproto int:1- (int:a))
(defproto double:1- (double:a))
(defproto int:1- (Object:a))
(defproto double:1- (Object:a))

(defproto boolean:< (int:a int:b))
(defproto boolean:< (double:a int:b))
(defproto boolean:< (int:a double:b))
(defproto boolean:< (double:a double:b))
(defproto boolean:< (int:a Object:b))
(defproto boolean:< (double:a Object:b))
(defproto boolean:< (Object:a int:b))
(defproto boolean:< (Object:a double:b))
(defproto boolean:< (Object:a Object:b))

(defproto boolean:<= (int:a int:b))
(defproto boolean:<= (double:a int:b))
(defproto boolean:<= (int:a double:b))
(defproto boolean:<= (double:a double:b))
(defproto boolean:<= (int:a Object:b))
(defproto boolean:<= (double:a Object:b))
(defproto boolean:<= (Object:a int:b))
(defproto boolean:<= (Object:a double:b))
(defproto boolean:<= (Object:a Object:b))

(defproto boolean:= (int:a int:b))
(defproto boolean:= (double:a int:b))
(defproto boolean:= (int:a double:b))
(defproto boolean:= (double:a double:b))
(defproto boolean:= (int:a Object:b))
(defproto boolean:= (double:a Object:b))
(defproto boolean:= (Object:a int:b))
(defproto boolean:= (Object:a double:b))
(defproto boolean:= (Object:a Object:b))

(defproto boolean:>= (int:a int:b))
(defproto boolean:>= (double:a int:b))
(defproto boolean:>= (int:a double:b))
(defproto boolean:>= (double:a double:b))
(defproto boolean:>= (int:a Object:b))
(defproto boolean:>= (double:a Object:b))
(defproto boolean:>= (Object:a int:b))
(defproto boolean:>= (Object:a double:b))
(defproto boolean:>= (Object:a Object:b))

(defproto boolean:> (int:a int:b))
(defproto boolean:> (double:a int:b))
(defproto boolean:> (int:a double:b))
(defproto boolean:> (double:a double:b))
(defproto boolean:> (int:a Object:b))
(defproto boolean:> (double:a Object:b))
(defproto boolean:> (Object:a int:b))
(defproto boolean:> (Object:a double:b))
(defproto boolean:> (Object:a Object:b))
